# User Service Configuration
# This file will be served by Config Server

spring:
  application:
    name: user-service

  # PostgreSQL Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:yushan_user}?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false&allowMultiQueries=true
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000

  # ENABLE Flyway for database migrations
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2

  # Kafka Configuration (Phase 2)
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: user-service
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      client-id: user-service
      retries: 3
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
      acks: all
      enable-idempotence: true
      compression-type: none
      request-timeout-ms: 30000
      delivery-timeout-ms: 120000
      properties:
        spring.json.add.type.headers: false
        spring.json.use.type.headers: false

  mail:
    host: ${MAIL_HOST:smtp.qq.com}
    username: ${MAIL_USERNAME:1784304095@qq.com}
    password: ${MAIL_PASSWORD:fmgjizhjdbbabiib}
    port: ${MAIL_PORT:465}
    default-encoding: UTF-8
    protocol: smtps
    properties:
      "mail.smtps.connectiontimeout": 10000
      "mail.smtps.timeout": 10000
      "mail.smtps.writetimeout": 10000
      "mail.smtps.auth": true
      "mail.smtps.ssl.enable": true
      "mail.smtps.ssl.trust": "smtp.qq.com"
      "mail.smtps.ssl.checkserveridentity": false
  devtools:
    restart:
      enabled: false

# Server Configuration
server:
  port: 8081
  servlet:
    context-path: /
  compression:
    enabled: true

# Eureka Client Configuration
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
    fetch-registry: true
    register-with-eureka: true

  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    metadata-map:
      version: 1.0.0
      description: User authentication and profile management service

resilience4j:
  circuitbreaker:
    instances:
      content-service:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 20
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  health:
    mail:
      enabled: false
  metrics:
    tags:
      application: ${spring.application.name}

mybatis:
  mapper-locations: classpath:/mapper/**Mapper.xml
  type-aliases-package: com.yushan.user_service.entity
  config-location: classpath:config/mybatis-config.xml

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:yushan-micro-service-secret-key-for-jwt-token-generation-and-validation-2024}
  issuer: ${JWT_ISSUER:yushan-micro-service}
  algorithm: ${JWT_ALGORITHM:HS256}
  access-token.expiration: ${JWT_ACCESS_TOKEN_EXPIRATION:3600000}  # 1 hour in milliseconds
  refresh-token.expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:86400000}  # 24 hours in milliseconds

# Logging Configuration
logging:
  level:
    com.yushan.user: DEBUG
    org.springframework.cloud: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"